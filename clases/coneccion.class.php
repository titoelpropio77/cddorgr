<?PHPclass ADO {    var $dblink_ok = 0;    var $db;    var $result;    var $usu;    var $mensaje;    public static $insert_id=0;    public static $modulo='';    public static $modulo_id=0;    public static $tarea='';    public static $token='';        function ADO() {        $this->verificar_tipo_base();        $this->conectar();        $this->usu = new USUARIO;    }    function verificar_tipo_base() {        switch (_TIPO_BASE_DE_DATOS) {            case 'mysql':                $dbf_nodate = NODATE_MYSQL;                $dbf_nodatetime = NODATE_MYSQL . ' 00:00:00';                define('DBF_NODATE', NODATE_MYSQL);                define('DBF_NODATETIME', NODATE_MYSQL . ' 00:00:00');                $sql_LIKE = 'LIKE';                break;            case 'postgres7':                $dbf_nodate = NODATE_POSTGRE;                $dbf_nodatetime = NODATE_POSTGRE . ' 00:00:00';                define('DBF_NODATE', NODATE_POSTGRE);                define('DBF_NODATETIME', NODATE_POSTGRE . ' 00:00:00');                $sql_LIKE = 'ILIKE';                break;            case 'postgres':                $dbf_nodate = NODATE_POSTGRE;                $dbf_nodatetime = NODATE_POSTGRE . ' 00:00:00';                define('DBF_NODATE', NODATE_POSTGRE);                define('DBF_NODATETIME', NODATE_POSTGRE . ' 00:00:00');                $sql_LIKE = 'ILIKE';                break;            default: $dbf_nodate = NODATE_DEFAULT;                $dbf_nodatetime = NODATE_DEFAULT . ' 00:00:00';                define('DBF_NODATE', NODATE_DEFAULT);                define('DBF_NODATETIME', NODATE_DEFAULT . ' 00:00:00');                $sql_LIKE = 'LIKE';        }    }    function conectar() {        $this->dblink_ok = 0;        # ADODB connection        $this->db = &ADONewConnection(_TIPO_BASE_DE_DATOS);//        $this->db->debug = true;        $this->dblink_ok = $this->db->Connect(_SERVIDOR_BASE_DE_DATOS, _USUARIO_BASE_DE_DATOS, _PASSWORD_BASE_DE_DATOS, _BASE_DE_DATOS);    }        function begin_transaccion(){//        echo 'iniciar transacion<br>';        $this->db->StartTrans();    }    function commit(){        if($this->db->CompleteTrans()){                        return true;        }else{            $this->db->RollbackTrans();            return false;        }            }        function rollback(){                $this->db->RollbackTrans();    }    function get_errores(){                return $this->db->mensaje_error;    }    function ejecutar($sql, $log = true,$insert_id=false) {        try {            $this->result = $this->db->Execute($sql);            if ($this->result) {                $log_insert_id="";                $_ins_id=0;                $cmd = "^\*\*\*|" .                "^ *INSERT|^ *DELETE|^ *UPDATE|^ *insert|^ *delete|" .                "^ *update";                                if($insert_id || (ADO::$modulo_id==-1 && eregi($cmd, $sql))){//                    echo "$sql; <br>";                    $_ins_id=mysql_insert_id();                }                if($insert_id){                    ADO::$insert_id=  $_ins_id;                    $log_insert_id=" -- ".$_ins_id;                }                if(ADO::$modulo_id==-1 && eregi($cmd, $sql)){                   ADO::$modulo_id=  $_ins_id;                }                if ($log) {                    $this->log($sql,$log_insert_id);                }            } else {                $this->db->FailTrans();                echo $sql.'<br>';                throw new Exception();            }        } catch (Exception $exc) {            echo $exc->getTraceAsString();            echo "<p style='color:red;'>{$exc->getMessage()}</p>";            throw new Exception();        }    }    function get_num_registros() {        return $this->result->RecordCount();    }    function get_datos() {        return $this->result->GetArray();    }    function get_fila() {        return $this->result->GetRow();    }    function get_objeto() {        return $this->result->FetchObj();    }    function siguiente() {        return $this->result->MoveNext();    }    function reset() {        return $this->result->MoveFirst();    }    function log($sql,$log_insert_id="") {//        return;        $cmd = "^\*\*\*|" .                "^ *INSERT|^ *DELETE|^ *UPDATE|^ *insert|^ *delete|" .                "^ *update";        $sql = str_replace("'", "\'", $sql);        $sql =$sql.$log_insert_id;        if (eregi($cmd, $sql)) {            $modulo=  ADO::$modulo;            $modulo_id=  ADO::$modulo_id;            $tarea=  ADO::$tarea;            $token=  ADO::$token;            $nombre_completo=  $_SESSION[nombre_completo];            $consulta = "insert into ad_logs                                     (log_fecha,log_hora,log_tipo_accion,log_accion,log_usu_id,log_nombre,log_modulo,log_modulo_id,log_tarea,log_token,log_ip,log_pc)                                values				('" . date("Y-m-d") . "','" . date("H:i:s") . "','QUERY','" . $sql . "','" . $this->usu->get_id() . "','$nombre_completo','$modulo','$modulo_id','$tarea','$token','" . $_SERVER['REMOTE_ADDR'] . "','" . gethostbyaddr($_SERVER['REMOTE_ADDR']) . "')";        //            echo $consulta;            mysql_query($consulta);        }    }}